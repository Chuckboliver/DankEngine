////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : tx_drc.vf
// /___/   /\     Timestamp : 12/17/2020 05:27:22
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: D:\Xilinx\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family spartan6 -verilog tx_drc.vf -w "C:/Users/Ken/OneDrive - KMITL/Digital System Fundamentals/githubDigitalAssign/phol/DigitalProject/tx.sch"
//Design Name: tx
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module debounceSwitch16input_MUSER_tx(clk_P123, 
                                      i_Switch, 
                                      o_Switch);

    input clk_P123;
    input [15:0] i_Switch;
   output [15:0] o_Switch;
   
   
   Debounce_Switch  XLXI_1 (.i_Clk(clk_P123), 
                           .i_Switch(i_Switch[15]), 
                           .o_Switch(o_Switch[15]));
   Debounce_Switch  XLXI_2 (.i_Clk(clk_P123), 
                           .i_Switch(i_Switch[14]), 
                           .o_Switch(o_Switch[14]));
   Debounce_Switch  XLXI_3 (.i_Clk(clk_P123), 
                           .i_Switch(i_Switch[13]), 
                           .o_Switch(o_Switch[13]));
   Debounce_Switch  XLXI_4 (.i_Clk(clk_P123), 
                           .i_Switch(i_Switch[12]), 
                           .o_Switch(o_Switch[12]));
   Debounce_Switch  XLXI_5 (.i_Clk(clk_P123), 
                           .i_Switch(i_Switch[11]), 
                           .o_Switch(o_Switch[11]));
   Debounce_Switch  XLXI_6 (.i_Clk(clk_P123), 
                           .i_Switch(i_Switch[10]), 
                           .o_Switch(o_Switch[10]));
   Debounce_Switch  XLXI_18 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[9]), 
                            .o_Switch(o_Switch[9]));
   Debounce_Switch  XLXI_19 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[8]), 
                            .o_Switch(o_Switch[8]));
   Debounce_Switch  XLXI_20 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[7]), 
                            .o_Switch(o_Switch[7]));
   Debounce_Switch  XLXI_21 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[6]), 
                            .o_Switch(o_Switch[6]));
   Debounce_Switch  XLXI_22 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[5]), 
                            .o_Switch(o_Switch[5]));
   Debounce_Switch  XLXI_23 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[4]), 
                            .o_Switch(o_Switch[4]));
   Debounce_Switch  XLXI_24 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[3]), 
                            .o_Switch(o_Switch[3]));
   Debounce_Switch  XLXI_25 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[2]), 
                            .o_Switch(o_Switch[2]));
   Debounce_Switch  XLXI_26 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[1]), 
                            .o_Switch(o_Switch[1]));
   Debounce_Switch  XLXI_27 (.i_Clk(clk_P123), 
                            .i_Switch(i_Switch[0]), 
                            .o_Switch(o_Switch[0]));
endmodule
`timescale 1ns / 1ps

module tx(bishop_sw, 
          blackSwitch, 
          clock_P123, 
          downSwitch, 
          knight_sw, 
          newgame_switch, 
          queen_sw, 
          rook_sw, 
          switch_Move, 
          upSwitch, 
          whiteSwitch, 
          level_common, 
          level_seg, 
          TX_P98);

    input bishop_sw;
    input blackSwitch;
    input clock_P123;
    input downSwitch;
    input knight_sw;
    input newgame_switch;
    input queen_sw;
    input rook_sw;
    input [15:0] switch_Move;
    input upSwitch;
    input whiteSwitch;
   output level_common;
   output [6:0] level_seg;
   output TX_P98;
   
   wire [3:0] a;
   wire [15:0] switch;
   wire XLXN_235;
   wire XLXN_236;
   wire XLXN_242;
   wire XLXN_243;
   wire XLXN_244;
   wire XLXN_245;
   wire XLXN_263;
   wire XLXN_265;
   wire XLXN_266;
   wire XLXN_267;
   wire XLXN_268;
   wire [2:0] XLXN_269;
   wire [1:0] XLXN_270;
   wire [11:0] XLXN_272;
   wire XLXN_273;
   wire XLXN_274;
   wire XLXN_275;
   wire [15:0] XLXN_276;
   wire [11:0] XLXN_277;
   wire [2:0] XLXN_278;
   
   ProjectDigital  XLXI_3 (.a(a[3:0]), 
                          .black_switch(XLXN_242), 
                          .clear_out1(XLXN_235), 
                          .clear_out2(XLXN_235), 
                          .clear_out3(XLXN_235), 
                          .clear_out4(XLXN_235), 
                          .clear_ready_out1(XLXN_235), 
                          .clear_ready_out2(XLXN_235), 
                          .clear_ready_out3(XLXN_235), 
                          .clear_ready_out4(XLXN_235), 
                          .down_switch(XLXN_245), 
                          .newgame_switch(XLXN_235), 
                          .up_switch(XLXN_244), 
                          .white_switch(XLXN_243), 
                          .LED_NEW_GAME_SW(), 
                          .out1(XLXN_273), 
                          .out2(XLXN_274), 
                          .out3(XLXN_269[2:0]), 
                          .out4(XLXN_270[1:0]), 
                          .ready_out1(XLXN_263), 
                          .ready_out2(XLXN_265), 
                          .ready_out3(XLXN_266), 
                          .ready_out4(XLXN_267));
   serial_gen  XLXI_5 (.clock(clock_P123), 
                      .data(XLXN_276[15:0]), 
                      .start(), 
                      .clear_Color(), 
                      .clear_level(), 
                      .clear_Move(XLXN_235), 
                      .clear_NewGame(), 
                      .clear_Promote(), 
                      .tx(TX_P98));
   debounceSwitch16input_MUSER_tx  XLXI_12 (.clk_P123(clock_P123), 
                                           .i_Switch(switch_Move[15:0]), 
                                           .o_Switch(switch[15:0]));
   Debounce_Switch  XLXI_13 (.i_Clk(XLXN_236), 
                            .i_Switch(newgame_switch), 
                            .o_Switch(XLXN_235));
   Debounce_Switch  XLXI_14 (.i_Clk(XLXN_236), 
                            .i_Switch(blackSwitch), 
                            .o_Switch(XLXN_242));
   Debounce_Switch  XLXI_15 (.i_Clk(XLXN_236), 
                            .i_Switch(whiteSwitch), 
                            .o_Switch(XLXN_243));
   Debounce_Switch  XLXI_16 (.i_Clk(XLXN_236), 
                            .i_Switch(upSwitch), 
                            .o_Switch(XLXN_244));
   Debounce_Switch  XLXI_17 (.i_Clk(XLXN_236), 
                            .i_Switch(downSwitch), 
                            .o_Switch(XLXN_245));
   Debounce_Switch  XLXI_18 (.i_Clk(XLXN_236), 
                            .i_Switch(rook_sw), 
                            .o_Switch(a[3]));
   Debounce_Switch  XLXI_19 (.i_Clk(XLXN_236), 
                            .i_Switch(knight_sw), 
                            .o_Switch(a[2]));
   Debounce_Switch  XLXI_27 (.i_Clk(XLXN_236), 
                            .i_Switch(bishop_sw), 
                            .o_Switch(a[1]));
   Debounce_Switch  XLXI_28 (.i_Clk(XLXN_236), 
                            .i_Switch(queen_sw), 
                            .o_Switch(a[0]));
   mux71  XLXI_29 (.I0(XLXN_273), 
                  .I1(XLXN_274), 
                  .I2(XLXN_269[2:0]), 
                  .I3(XLXN_272[11:0]), 
                  .I4(XLXN_270[1:0]), 
                  .I6(XLXN_275), 
                  .S(XLXN_278[2:0]), 
                  .data(XLXN_277[11:0]));
   levelDecoder  XLXI_30 (.inp(), 
                         .common(level_common), 
                         .seg(level_seg[6:0]));
   mergeData  XLXI_37 (.data_in(XLXN_277[11:0]), 
                      .SEL(XLXN_278[2:0]), 
                      .data_out(XLXN_276[15:0]));
   counter0_1  XLXI_85 (.alp(switch[15:8]), 
                       .clear(XLXN_235), 
                       .num(switch[7:0]), 
                       .move(XLXN_272[11:0]), 
                       .ready_move(XLXN_268));
   encoder5to3  XLXI_86 (.A(XLXN_263), 
                        .B(XLXN_265), 
                        .C(XLXN_266), 
                        .D(XLXN_268), 
                        .E(XLXN_267), 
                        .sel(XLXN_278[2:0]));
   GND  XLXI_89 (.G(XLXN_275));
endmodule
